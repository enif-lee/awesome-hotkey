// Refer https://endife.tistory.com/49
enum KeycapType {
    PrtSc = 'PrtSc',
    ScrollLock = 'ScrollLock',
    PauseBreak = 'PauseBreak',
    Insert = 'Insert',
    Home = 'Home',
    PgUp = 'PgUp',
    Del = 'Del',
    End = 'End',
    PgDn = 'PgDn',
    Esc = 'Esc',
    F1 = 'F1',
    F2 = 'F2',
    F3 = 'F3',
    F4 = 'F4',
    F5 = 'F5',
    F6 = 'F6',
    F7 = 'F7',
    F8 = 'F8',
    F9 = 'F9',
    F10 = 'F10',
    F11 = 'F11',
    F12 = 'F12',
    Grave = '`',
    _1 = '1',
    _2 = '2',
    _3 = '3',
    _4 = '4',
    _5 = '5',
    _6 = '6',
    _7 = '7',
    _8 = '8',
    _9 = '9',
    _0 = '0',
    Hyphen = '-',
    EqualSign = '=',
    Backspace = 'Backspace',
    Tab = 'Tab',
    LeftBracket = '[',
    RightBracket = ']',
    BackSlash = '\\',
    CapsLock = 'CapsLock',
    A = 'A',
    S = 'S',
    D = 'D',
    F = 'F',
    G = 'G',
    H = 'H',
    J = 'J',
    K = 'K',
    L = 'L',
    Q = 'Q',
    W = 'W',
    E = 'E',
    R = 'R',
    T = 'T',
    Y = 'Y',
    U = 'U',
    I = 'I',
    O = 'O',
    P = 'P',
    Z = 'Z',
    X = 'X',
    C = 'C',
    V = 'V',
    B = 'B',
    N = 'N',
    M = 'M',
    SemiColon = ';',
    QuotationMark = '\'',
    Enter = 'Enter',
    Shift = 'Shift',
    Comma = ',',
    Period = '.',
    Slash = '/',
    Ctrl = 'Ctrl',
    Alt = 'Alt',
    Option = 'Opt',
    Command = 'Cmd',
    Space = 'Space',
    Right = 'Right',
    Left = 'Left',
    Up = 'Up',
    Down = 'Down',

    // 확인 필요
    Plus = 'Plus',
    DoubleQuotationMark = 'Double QuotationMark', // "

    // Window 특화
    Windows = 'Win',
    Chinese = '한자',
    KoreanEnglish = '한/영',
    Menu = 'Menu',

    // Empty
    EmptyTop = 'EmptyTop',
    EmptyFn = 'EmptyFn',
    EmptyDirection = 'EmptyDirection',
    Empty = '' // 매핑 없음
}

export const KeyKeycapMap: Record<string, KeycapType> = {
    // common key
    "right": KeycapType.Right,
    "left": KeycapType.Left,
    "up": KeycapType.Up,
    "down": KeycapType.Down,
    "f1": KeycapType.F1,
    "f2": KeycapType.F2,
    "f3": KeycapType.F3,
    "f4": KeycapType.F4,
    "f5": KeycapType.F5,
    "f6": KeycapType.F6,
    "f7": KeycapType.F7,
    "f8": KeycapType.F8,
    "f9": KeycapType.F9,
    "f10": KeycapType.F10,
    "f11": KeycapType.F11,
    "f12": KeycapType.F12,
    "+": KeycapType.Plus,
    "-": KeycapType.Grave,
    "=": KeycapType.EqualSign,
    "1": KeycapType._1,
    "2": KeycapType._2,
    "3": KeycapType._3,
    "4": KeycapType._4,
    "5": KeycapType._5,
    "6": KeycapType._6,
    "7": KeycapType._7,
    "8": KeycapType._8,
    "9": KeycapType._9,
    "0": KeycapType._0,
    "'": KeycapType.QuotationMark,
    "\"": KeycapType.DoubleQuotationMark,
    ";": KeycapType.SemiColon,
    "a": KeycapType.A,
    "b": KeycapType.B,
    "c": KeycapType.C,
    "d": KeycapType.D,
    "e": KeycapType.E,
    "f": KeycapType.F,
    "g": KeycapType.G,
    "h": KeycapType.H,
    "i": KeycapType.I,
    "j": KeycapType.J,
    "k": KeycapType.K,
    "l": KeycapType.L,
    "m": KeycapType.M,
    "n": KeycapType.N,
    "o": KeycapType.O,
    "p": KeycapType.P,
    "q": KeycapType.Q,
    "r": KeycapType.R,
    "s": KeycapType.S,
    "t": KeycapType.T,
    "u": KeycapType.U,
    "v": KeycapType.V,
    "w": KeycapType.W,
    "x": KeycapType.X,
    "y": KeycapType.Y,
    "z": KeycapType.Z,
    ",": KeycapType.Comma,
    ".": KeycapType.Period,
    "/": KeycapType.Slash,
    "[": KeycapType.LeftBracket,
    "]": KeycapType.RightBracket,
    "\\": KeycapType.BackSlash,
    "back": KeycapType.Backspace,
    "tab": KeycapType.Tab,
    "caps": KeycapType.CapsLock,
    "space": KeycapType.Space,
    "esc": KeycapType.Esc,
    "enter": KeycapType.Enter,
    "shft": KeycapType.Shift,
    "ctrl": KeycapType.Ctrl,
    "alt": KeycapType.Alt,
    "del": KeycapType.Del,
    "ins": KeycapType.Insert,

    // windows
    "win": KeycapType.Windows,
    "pgup": KeycapType.PgUp,
    "pgdw": KeycapType.PgDn,
    "home": KeycapType.Home,
    "end": KeycapType.End,
    "pause-break": KeycapType.PauseBreak,
    "scroll-lock": KeycapType.ScrollLock,
    "prtsc": KeycapType.PrtSc,
    "menu": KeycapType.Menu,
}


export default KeycapType
